# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a job called "build"
  build:

    container: mavlink/qgc-build-linux:2019-12-21
    # The type of runner that the job will run on
    runs-on: [self-hosted]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Update Git
        run: |
          sudo apt update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository ppa:git-core/ppa
          sudo apt update
          sudo apt install -y git

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: '${{ secrets.PAT }}'
          submodules: 'recursive'

      - name: Build Project
        run: |
          qmake --version
          sudo apt-get install -y libsdl2-dev libxkbcommon-x11-0
          mkdir build
          cd build
          ## TODO : To speedup build for CI-DEV, uncomment it for prod
          #ccache -C
          qmake -r ../qgroundcontrol.pro CONFIG+=debug -spec linux-g++-64
          make -j8

      - name: Run headless test
        run: |
          mkdir -p ~/.config/QtProject/ && cp ./test/qtlogging.ini ~/.config/QtProject/ && cd build && xvfb-run ./staging/qgroundcontrol-start.sh --unittest
